# FROM node:14 as dependencies
# WORKDIR /app
# COPY package.json ./
# RUN npm install 

# FROM node:14 as builder
# WORKDIR /app
# COPY . .
# COPY --from=dependencies /app/node_modules ./node_modules
# RUN npm run build

# FROM node:14 as runner
# WORKDIR /app

# ENV PUBLIC_URL="https://app-dev.yety.it"
# ENV UPLOAD_ENDPOINT="https://app-dev.yety.it"
# ENV GRAPHQL_ENDPOINT="https://app-dev.yety.it/graphql"

# # If you are using a custom next.config.js file, uncomment this line.
# COPY --from=builder /app/next.config.js ./
# COPY --from=builder /app/public ./public
# COPY --from=builder /app/.next ./.next
# COPY --from=builder /app/node_modules ./node_modules
# COPY --from=builder /app/package.json ./package.json
# COPY --from=builder /app/sourcebit.js ./sourcebit.js

# FROM nginx:alpine
# COPY nginx/default.conf /etc/nginx/nginx.conf
# RUN rm -rf /usr/share/nginx/html/*

# # Copy from the stahg 1
# COPY --from=builder /app/out /usr/share/nginx/html

# EXPOSE 3000 80
# step 1 as builder
FROM node:14-alpine as builder

# copy the package.json to install dependencies
COPY package.json  ./

# Install the dependencies and make the folder
RUN npm install && mkdir /next-blog && mv ./node_modules ./next-blog

WORKDIR /next-blog

COPY . .

# Build the project and copy the files
RUN npm run build


FROM nginx:alpine

#!/bin/sh

COPY ./.nginx/default.conf /etc/nginx/nginx.conf

## Remove default nginx index page
RUN rm -rf /usr/share/nginx/html/*

# Copy from the stahg 1
COPY --from=builder /next-blog/out /usr/share/nginx/html

EXPOSE 3000 80

ENTRYPOINT ["nginx", "-g", "daemon off;"]